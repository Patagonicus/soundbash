#!/usr/bin/env bash

# Checks if a page is a single track page or not.
#
# Input:
# $1 - URL of the page
# Return: 0 if the page is a single track page, 1 otherwise
is_single_track_page() {
	wget -O - -- "$1" 2>/dev/null | grep '<meta content="soundcloud:sound"' >/dev/null 2>&1
}

# Extracts all stream URLs from a given page.
#
# Input:
# $1 - URL of the page
# Output:
# stdout - streaming URLs separated by newlines
get_stream_URLs() {
	wget -O - -- "$1" 2>/dev/null | sed -ne '/window\.SC\.bufferTracks\.push/{s/.*uri":"\([^"]*\)".*streamUrl":"\([^"?]*\).*/\2?\1/;p;}'
}

# Extracts the page count for a page.
#
# Input:
# $1 - URL of the page
# Output:
# stdout - number of pages or an empty string if there arenâ€™t multiple pages
get_page_count() {
	local count="$(wget -O - -- "$1" 2>/dev/null | grep -o 'page=[0-9]*' | cut -d= -f 2 | sort -g | tail -n 1)"
	if ! (( count >= 1 )); then
		count=1
	fi
	echo "$count"
}

# Shows a description of the script and a list of parameters
#
# Output:
# stdout - short description and a list of parameters
show_help() {
	cat <<EOF
Usage: soundbash soundcloud_link
This utility extracts all SoundCloud streaming URLs from a given page. It should work with pretty much everything (track URLs, user favorites, searches).
The streaming URL contains the track path as a parameter. Prepend the part after the quotation mark with http://soundcloud.com to get the track URL.

Parameters:
    -h -?       print this help and exit.
    -m number   limits the output to a maximum of number pages. Use 0 or a negative number to fetch all results. Default: 10
EOF
}


OPTIND=1
max_pages=10

while getopts ':h?m:' opt; do
	case "$opt" in
		h|\?)
			if [[ -n "$OPTARG" ]]; then
				echo "Invalid option: $OPTARG" >&2
				exit 1
			fi
			show_help
			exit 0
			;;
		m)
			max_pages="$OPTARG"
			;;
	esac
done

shift $((OPTIND - 1))

if (( $# == 0 )); then
	echo "No URLs given." >&2
	echo "Pass -h for help." >&2
	exit 1
fi

while (( $# > 0 )); do
	if is_single_track_page "$1"; then
		get_stream_URLs "$1" | head -n 1
	else
		count="$(get_page_count "$1")"
		if (( max_pages > 0 && count > max_pages )); then
			count="$max_pages"
		fi
		for ((i=1;i<=count;i++)); do
			get_stream_URLs "${1}?page=${i}"
		done
	fi
	shift
done
